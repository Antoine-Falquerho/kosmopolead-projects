<% labelled_tabular_form_for :issue, @issue,
                             :url => {:action => 'edit', :id => @issue},
                             :html => {:id => 'issue-form',
                                       :class => nil,
                                       :multipart => true} do |f| %>
    <%= error_messages_for 'issue' %>
    <%= error_messages_for 'time_entry' %>
    <div>
   
    <% if @issue.is_issue? %>
    <% if authorize_for('timelog', 'edit') %>
        <fieldset class="tabular"><legend><%= l(:button_log_time) %></legend>
          <% fields_for :time_entry, @time_entry, { :builder => TabularFormBuilder, :lang => current_language} do |time_entry| %>
          <div class="splitcontentleft">
          <p><%= time_entry.text_field :hours, :size => 6, :label => :label_spent_time %> <%= @project.time_unit_label %></p>
          </div>
          <div class="splitcontentright">
          <p><%= time_entry.select :activity_id, activity_collection_for_select_options %></p>
          </div>
          <p><%= time_entry.text_field :comments, :size => 60 %></p>
          <% if  @time_entry%>
            <% @time_entry.custom_field_values.each do |value| %>
                <p><%= custom_field_tag_with_label :time_entry, value %></p>
            <% end %>
          <% end %>
          <% end %>
      </fieldset>
      <% end %>
    <% end %>

    <div class="splitcontentleft">
      <% if @issue.new_record? || @allowed_statuses.any? %>
      <p><%= f.select :status_id, (@allowed_statuses.collect {|p| [p.name, p.id]}), :required => true %></p>
      <% else %>
      <p><label><%= l(:field_status) %></label> <%= @issue.status.name %></p>
      <% end %>

      <p><%= f.select :priority_id, (@priorities.collect {|p| [p.name, p.id]}), :required => true %></p>
      <p><%= f.select :assigned_to_id, (@issue.assignable_users.collect {|m| [m.name, m.id]}), :include_blank => true %></p>
      <% unless @project.issue_categories.empty? %>
      <p><%= f.select :category_id, (@project.issue_categories.collect {|c| [c.name, c.id]}), :include_blank => true %>
      <%= prompt_to_remote(l(:label_issue_category_new),
                           l(:label_issue_category_new), 'category[name]',
                           {:controller => 'projects', :action => 'add_issue_category', :id => @project},
                           :class => 'small', :tabindex => 199) if authorize_for('projects', 'add_issue_category') %></p>
      <% end %>
      <%= content_tag('p', f.select(:fixed_version_id,
                                    (@project.versions.sort.collect {|v| [v.name, v.id]}),
                                    { :include_blank => true })) unless @project.versions.empty? %>
    </div>

    <div class="splitcontentright">
    <p><%= f.text_field :start_date, :size => 10 %><%= calendar_for('issue_start_date') %></p>
    <p><%= f.text_field :due_date, :size => 10 %><%= calendar_for('issue_due_date') %></p>
    <p><%= f.text_field :estimated_hours, :size => 3 %> <%= l(:field_hours) %></p>
    <p><%= f.select :done_ratio, ((0..10).to_a.collect {|r| ["#{r*10} %", r*10] }) %></p>
    </div>
      
    <fieldset><legend><%= l(:field_notes) %></legend>
    <%= text_area_tag 'notes', @notes, :cols => 60, :rows => 10, :class => 'wiki-edit' %>
    <%= wikitoolbar_for 'notes' %>
    <%= call_hook(:view_issues_edit_notes_bottom, { :issue => @issue, :notes => @notes, :form => f }) %>
    <% if @issue.type == "ISSUE" %>
      <p><%=l(:label_attachment_plural)%><br /><%= render :partial => 'attachments/form' %></p>
    <% end %>
    </fieldset>
    </div>
    
    <%= f.hidden_field :lock_version %>
    <div class="buttons right">
      <%= submit_tag l(:button_submit),:class=>"button btn_blue corner-all" %>
      <%= link_to_remote l(:label_preview),                        
                       { :url => { :controller => 'issues', :action => 'preview', :project_id => @project, :id => @issue },
                         :method => 'post',
                         :update => 'preview',
                         :with => 'Form.serialize("issue-form")',
                         :complete => "Element.scrollTo('preview')"
                       },:class=>"button btn_blue corner-all", :accesskey => accesskey(:preview) %>
    </div>
    <div class="clearer"></div>
<% end %>

<div id="preview" class="wiki"></div>
